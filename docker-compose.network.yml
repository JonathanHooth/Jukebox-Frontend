services:
  ####################################
  # Server & Network Config
  ####################################
  jukebox:
    restart: always
    image: ikehunter5/jukebox-server:latest
    # image: jukebox-server-local:latest
    pull_policy: always
    container_name: jbx-server-fe
    env_file:
      - .env.network
    environment:
      - NODE_ENV=network
      - PORT=9000
      - HOST=localhost
      - LOG_LEVEL=debug
      - BASE_URL=http://localhost:8080

      - SPOTIFY_CLIENT_ID=${SPOTIFY_CLIENT_ID}
      - SPOTIFY_CLIENT_SECRET=${SPOTIFY_CLIENT_SECRET}

      - PROXY_URL=http://proxy:8080
      - DB_HOST=jbx-network-db-fe
      - DB_PORT=5432
      - DB_USER=devuser
      - DB_PASS=devpass
      - DB_NAME=devdatabase

      # - REDIS_HOST=jbx-network-redis-fe
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - 9000:9000
    depends_on:
      - postgres-jukebox
    command: npm run start:network

  proxy:
    image: ikehunter5/jukebox-proxy:latest
    ports:
      - 8080:8080
      - 8081:8081
    depends_on:
      - jukebox
      - club-portal
    restart: always
    volumes:
      - client-dist-jbx:/vol/client
      - club-static:/vol/static
    environment:
      - SERVER_URI=jbx-server-fe:9000
      - WEBSOCKET_URI=jbx-server-fe:9000
      - CLUB_MANAGER_URI=club-app-network-fe:9000
      - PUBLIC_STATIC_URI=jukebox-client-631bab280a434e28995fd3fcafd1fa5a.s3-website-us-east-1.amazonaws.com
    # attach: false

  redis:
    image: redis:alpine
    # container_name: jbx-network-redis-fe
    ports:
      - 6379:6379

  ####################################
  # Club Portal Config
  ####################################
  club-portal:
    image: ikehunter5/club-manager:latest
    container_name: club-app-network-fe
    volumes:
      - club-static:/vol/web
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py init_superuser &&
             entrypoint.sh"
    env_file:
      - .env.network
    depends_on:
      - postgres-clubs
      
  celery:
    image: ikehunter5/club-manager:latest
    restart: unless-stopped
    user: django-user
    command: ['celery', '-A', 'app', 'worker', '--loglevel=info']
    volumes:
      - club-static:/vol/web
    depends_on:
      - redis
      - postgres-clubs
      - club-portal
    env_file:
      - .env.network
    

  celerybeat:
    image: ikehunter5/club-manager:latest
    user: django-user
    restart: unless-stopped
    command:
      [
        'celery',
        '-A',
        'app',
        'beat',
        '--loglevel=info',
        '--scheduler',
        'django_celery_beat.schedulers:DatabaseScheduler'
      ]
    volumes:
      - club-static:/vol/web
    depends_on:
      - redis
      - postgres-clubs
      - celery
      - club-portal
    env_file:
      - .env.network

  postgres-jukebox:
    image: postgres:13-alpine
    container_name: jbx-network-db-fe
    volumes:
      - postgres-jukebox:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=devdatabase
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=devpass

  postgres-clubs:
    image: postgres:13-alpine
    # container_name: club-app-network-db-fe
    volumes:
      - postgres-clubs:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=devdatabase
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=devpass

volumes:
  client-dist-jbx:
    name: client-dist-jbx
  mongo-data-fe:
  club-static:
    name: club-static-fe
  postgres-clubs:
    name: postgres-clubs-network-fe
  postgres-jukebox:
    name: postgres-jukebox-network-fe

# networks:
#   cluster:
#     name: jukebox_cluster
#     driver: bridge
