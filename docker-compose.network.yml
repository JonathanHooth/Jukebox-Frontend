services:
  ####################################
  # React Client
  ####################################
  # client:
  #   build:
  #     context: .
  #   volumes:
  #     - ./src:/app/src
  #     # - ./.env.network:/app/.env.network
  #     - ./vite.config.ts:/app/vite.config.ts

  #     - client-dist-jbx:/app/dist

  #     - type: bind
  #       source: ./.env.network
  #       target: /app/.env.network

  #   ports:
  #     - 3000:3000
  #   command: npm run network

  ####################################
  # Server & Network Config
  ####################################
  jukebox:
    restart: always
    image: ikehunter5/jukebox-server:latest
    # image: jukebox-server-local:latest
    pull_policy: always
    container_name: jbx-server-fe
    env_file:
      - .env.network
    environment:
      - NODE_ENV=network
      - PORT=9000
      - HOST=localhost
      - LOG_LEVEL=debug
      - BASE_URL=http://localhost:8080

      - SPOTIFY_CLIENT_ID=${SPOTIFY_CLIENT_ID}
      - SPOTIFY_CLIENT_SECRET=${SPOTIFY_CLIENT_SECRET}

      - PROXY_URL=http://proxy:8080
      - DB_HOST=jbx-network-db-fe
      - DB_PORT=5432
      - DB_USER=devuser
      - DB_PASS=devpass
      - DB_NAME=devdatabase

      - REDIS_HOST=jbx-network-redis-fe
      - REDIS_PORT=6379
    ports:
      - 9000:9000
    depends_on:
      - postgres-jukebox
    networks:
      - cluster
    command: npm run start:network

  proxy:
    image: ikehunter5/jukebox-proxy:latest
    ports:
      - 8080:8080
      - 8081:8081
    networks:
      - cluster
    depends_on:
      - jukebox
      - club-manager
    restart: always
    volumes:
      - client-dist-jbx:/vol/client
      - club-static:/vol/static
    environment:
      - SERVER_URI=jbx-server-fe:9000
      - WEBSOCKET_URI=jbx-server-fe:9000
      - CLUB_MANAGER_URI=club-app-network-fe:9000
      - PUBLIC_STATIC_URI=jukebox-client-631bab280a434e28995fd3fcafd1fa5a.s3-website-us-east-1.amazonaws.com
    # attach: false

  redis:
    image: redis:alpine
    container_name: jbx-network-redis-fe
    ports:
      - 6379:6379
    networks:
      - cluster

  ####################################
  # Club Manager Config
  ####################################
  club-manager:
    image: ikehunter5/club-manager:latest
    container_name: club-app-network-fe
    # ports:
    #   - '8000:8000'
    volumes:
      # - ./app:/app
      - club-static:/vol/static
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py init_superuser &&
             entrypoint.sh"
    env_file:
      - .env.network
    environment:
      - PORT=9000
      - DJANGO_ENV=dev
      - DB_HOST=club-app-network-db-fe
      - DB_NAME=devdatabase
      - DB_USER=devuser
      - DB_PASS=devpass
      - DEBUG=1
      - DJANGO_ALLOWED_HOSTS=*
      - S3_STORAGE_BACKEND=0
      - CREATE_SUPERUSER=1
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL:-admin@example.com}
      - DJANGO_SUPERUSER_PASS=${DJANGO_SUPERUSER_PASS:-changeme}
    depends_on:
      - postgres-clubs
    networks:
      - cluster

  postgres-jukebox:
    image: postgres:13-alpine
    container_name: jbx-network-db-fe
    volumes:
      - postgres-jukebox:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=devdatabase
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=devpass
    networks:
      - cluster

  postgres-clubs:
    image: postgres:13-alpine
    container_name: club-app-network-db-fe
    volumes:
      - postgres-clubs:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=devdatabase
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=devpass
    networks:
      - cluster

volumes:
  client-dist-jbx:
    name: client-dist-jbx
  mongo-data-fe:
  club-static:
    name: club-static-fe
  postgres-clubs:
    name: postgres-clubs-network-fe
  postgres-jukebox:
    name: postgres-jukebox-network-fe

networks:
  cluster:
    name: jukebox_cluster
    driver: bridge
